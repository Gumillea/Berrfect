
plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

version = "${mod_version}"
group = "${group}"
archivesBaseName = "${mod_id}-${minecraft_version}"

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {

    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', '${mod_id}'
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                exquisito {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', '${mod_id}'
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                exquisito {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', '${mod_id}'
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                exquisito {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"


            args '--mod', 'berrfect', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                exquisito {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {url = "https://www.cursemaven.com"}
    maven {url = "https://maven.jaackson.me"}
    maven {url = "https://dvs1.progwml6.com/files/maven/" }
    maven {url = "https://modmaven.k-4u.nl" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.8'

    compileOnly fg.deobf("mezz.jei:jei-1.19.2-common-api:11.6.0.1015")
    compileOnly fg.deobf("mezz.jei:jei-1.19.2-forge-api:11.6.0.1015")
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.2-forge:11.6.0.1015")

    implementation fg.deobf("curse.maven:berry-good-355589:4776143")
    implementation fg.deobf("curse.maven:blueprint-382216:4749000")

    implementation fg.deobf("curse.maven:ars-nouveau-401955:4809720")
    implementation fg.deobf("curse.maven:curios-309927:4523009")
    implementation fg.deobf("curse.maven:patchouli-306770:4031402")

    implementation fg.deobf("curse.maven:oh-the-biomes-youll-go-247560:4602115")
    implementation fg.deobf("curse.maven:terrablender-563928:4205732")
    implementation fg.deobf("curse.maven:corgilib-693313:4554111")
    implementation fg.deobf("curse.maven:geckolib-388172:4407241")
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }


    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
